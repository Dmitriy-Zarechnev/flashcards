import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from 'react'

//========================================================================================
/*

üü°üü°üü° –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è üü°üü°üü°

1. –æ–±–µ—Ä–Ω—É—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –≤–Ω—É—Ç—Ä–∏ –±—É–¥—É—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

export function App() {
  return (
    <Provider store={store}>
      <LineLoadingProvider>
        <Router />
      </LineLoadingProvider>
    </Provider>
  )
}

2. –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

const { isLineLoading, setLineLoading } = useLineLoading()

*/
//========================================================================================
// [ –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–¢–ï–ö–°–¢–ê ]

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
type LineLoadingContextType = {
  isLineLoading: boolean
  setLineLoading: Dispatch<SetStateAction<boolean>>
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ç–∏–ø–∞ LoadingContextType
const LineLoadingContext = createContext<LineLoadingContextType>({
  isLineLoading: false,
  setLineLoading: () => {},
})

// –•—É–∫ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
export const useLineLoading = () => useContext(LineLoadingContext)

//========================================================================================
// [ –ü–†–û–í–ê–ô–î–ï–† –ö–û–ù–¢–ï–ö–°–¢–ê ]

type LineLoadingProviderProps = {
  children: ReactNode
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
export const LineLoadingProvider = ({ children }: LineLoadingProviderProps) => {
  const [isLineLoading, setLineLoading] = useState<boolean>(false)

  return (
    <LineLoadingContext.Provider value={{ isLineLoading, setLineLoading }}>
      {children}
    </LineLoadingContext.Provider>
  )
}
