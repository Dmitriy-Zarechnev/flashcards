import { ChangeEvent, ComponentPropsWithoutRef, useRef, useState } from 'react'

import { Button, Icon } from '@/shared'

import s from './PictureInput.module.scss'

type PictureInputProps = {
  btnDisable: boolean
  coverFromServer: string
  deleteImageHandlerCb: () => void
  handleImageChangeCb: (file: File) => void
  pictureDefaultCover: string
  setBlocked?: (blocked: boolean) => void /* üîπ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø—Å –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ */
} & ComponentPropsWithoutRef<'div'>

export const PictureInput = ({
  btnDisable,
  coverFromServer,
  deleteImageHandlerCb,
  handleImageChangeCb,
  pictureDefaultCover,
  setBlocked,
}: PictureInputProps) => {
  /* –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
     Ref –Ω—É–∂–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º —Å–∫—Ä—ã—Ç–æ–≥–æ <input type="file"> */

  const [selectedImage, setSelectedImage] = useState<string | undefined>(coverFromServer)
  const fileInputRef = useRef<HTMLInputElement>(null)

  /* –ø–æ—á–µ–º—É ref –∞ –Ω–µ –ª–æ–∫–ª–∞—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ? –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å input, –µ—Å–ª–∏ –º—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     —Ç–æ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ blob-–∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–∏–µ–¥—Ç—Å—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ref –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ */

  function imageChangeClick() {
    if (fileInputRef.current !== null) {
      fileInputRef.current.click()
    }
  }

  function deleteBlob() {
    // —É–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ø–∞–º—è—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ
    if (selectedImage) {
      URL.revokeObjectURL(selectedImage)
    }
  }

  function deleteImageHandler() {
    deleteBlob()

    // —É–¥–∞–ª—è–µ–º —Å–∞–º—É —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–π—Ç–∞
    setSelectedImage(undefined)

    // —É–¥–∞–ª—è–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —Ñ–æ—Ä–º–µ
    deleteImageHandlerCb()

    // —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ input
    if (fileInputRef.current) {
      fileInputRef.current.value = ''
    }
  }

  function handleImageChange(event: ChangeEvent<HTMLInputElement>) {
    /* üîπ –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ => –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∞ –Ω–µ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ,
    —Ç–∞–∫ –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ */
    if (setBlocked) {
      setBlocked(true)
    }

    /* üîπ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–¥–µ–ª–∞–ª –º–∏—Å–∫–ª–∏–∫, –∫–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–ª –∫–∞—Ä—Ç–∏–Ω–∫—É */
    setTimeout(() => {
      if (setBlocked) {
        setBlocked(false)
      }
    }, 500)

    if (event.target.files && event.target.files[0]) {
      deleteBlob()

      // –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π blob-–∫–∞—Ä—Ç–∏–Ω–∫–∏
      const newImageUI = URL.createObjectURL(event.target.files[0])

      setSelectedImage(newImageUI)

      /** –º–µ—Ç–æ–¥ RHF –∑–∞—Å–µ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–µ */
      handleImageChangeCb(event.target.files[0])
    }
  }

  return (
    <div className={s.pictureInput}>
      <img alt={'no photo'} src={selectedImage || pictureDefaultCover} />

      <div className={s.btnWrapper}>
        {selectedImage && (
          <Button
            disabled={btnDisable}
            fullWidth
            onClick={deleteImageHandler}
            type={'button'}
            variant={'secondary'}
          >
            <Icon iconId={'trashOutline'} />
            Delete Image
          </Button>
        )}

        <Button
          disabled={btnDisable}
          fullWidth
          onClick={imageChangeClick}
          type={'button'}
          variant={'secondary'}
        >
          <Icon iconId={'imgOutline'} />
          Change Image
        </Button>
        <input
          accept={'image/*'}
          onChange={handleImageChange}
          ref={fileInputRef}
          style={{ display: 'none' }}
          type={'file'}
        />
      </div>
    </div>
  )
}
